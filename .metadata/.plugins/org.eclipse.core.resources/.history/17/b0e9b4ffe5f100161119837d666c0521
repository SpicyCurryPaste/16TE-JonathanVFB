import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;
import java.math.*;


public class aventry {
	public static String Name = "";            /*Attributes and Info */
	public static String Surname = "";
	 public static String Home = "";
	public static String pClass;
	public static int age = 0;
	public static int level = 0;
	public static int intelligence = 1;
	 public static int health = 10;
	 public static int stamina = 15;
	 public static int strength = 1;
	 public static int gold = 0;
	 
	 public static int pPosX = 120;
	 public static int pPosY = -420;
	 
	 
	 public static int Vitality = health * 2;
	 public static int Endurance = stamina * 3;
	 public static int Damage = strength * 2;
	 
	 public static String used = "";
	
	 
	 public static String Knight, Scholar, Monk, Peasant;
	public  static Scanner scnr = new Scanner (System.in);
	
	public static ArrayList<Monster> monsterlist = new ArrayList<Monster>();
	 
	
	public static void main(String[] args) {
//		monsterlist.add();
		
		gameBoi();
	}
			
	
	
	public static void gameBoi () {
		// Game + Intro
		
		System.out.println("Greetings, traveler, what may thy name be?");
		String Name = scnr.nextLine();
		System.out.println(Name + "... and your surname?");
		String Surname = scnr.nextLine();
		System.out.println(Name +" "+ Surname + ", Where do you come from?");
		String Home = scnr.nextLine();
		System.out.print(Name +" "+ Surname +" "+ "Of" +" "+ Home + ", what may your age be?");
		int age = scnr.nextInt();
		int birth = 1632 - age;
		System.out.println(Name +" "+ Surname +" "+ "Of" +" "+ Home + ", you were born " + birth + ". Present years is 1632");
         delay(4000);
          System.out.println("So, " + Name +" "+ Surname +" "+ "Of" +" "+ Home +" , what's your profession? Knight [1], Scholar [2], Monk [3], Peasant [4]" );
  		int clsss = scnr.nextInt();
		classesBoi(clsss);    //Calls the method for classes selection
		
		System.out.print(Name +" "+ Surname +"," + " The " + pClass+ " from" +" "+ Home + "!");
		delay (3000);
		System.out.println(" *The unknown voice suddenly disappeared*");
		delay(3000);
		System.out.println("Tips: write status to see your character's condition.");
		
		
		while (Vitality > 0 || level < 70) {
			
		}
		
		
		
		
		
		
		
	}
	static void delay (int millis){
		try {
			Thread.sleep(millis);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public static void playerBoi () {

		
		
	
		
	}
	
	public static int vitalityChange (int vit,int change) {
		vit = vit + change;
		if(vit <= 0){
			pDeath();
			return 0;
		}
		return vit;
	}
	
	public static void movement (int dir) {
		
		spawn();
		
		
			switch (dir) {
			
			case 1: pPosY++;
			System.out.println("You moved North! " + pPosX + pPosY);
			Endurance--;
			
			case 2: pPosY--;
			System.out.println("You moved South! " + pPosX + pPosY);
			Endurance--;
			
			case 3: pPosX--;
			System.out.println("You moved West! " + pPosX + pPosY);
			Endurance--;
			
			case 4: pPosX++;
			System.out.println("You moved South! " + pPosX + pPosY);
			Endurance--;
			
			}
			
		
		
	}

	
	

		
		public static void classesBoi (int i) {
			// Method for choosing a class
			switch (i){
			case 1: pClass = "Knight";
			health += 2;
			stamina += 3;
			strength += 5;
			intelligence += 1;
			
			break;
			
			case 2: pClass = "Scholar";
			health  += 3;
			stamina += 2;
			strength += 1;
			intelligence += 5;
			
			break;
			
			case 3: pClass = "Monk";
			health  += 5;
			stamina += 2;
			strength += 1;
			intelligence += 3;
			
			break;
			
			case 4: pClass = "Peasant";
			health  += 2;
			stamina += 4;
			strength += 5;
			intelligence += 1;
			
			
			}
			
			
			
			
			
			
		}
		
		
		
		
		
		
		
		public static class Monster {
			String name;
			int mLevel;
			int hp;
			int dmg;
			
			public Monster(String Name,int HP, int DMG, int LEVEL) {
				this.name = Name;
				this.mLevel = LEVEL;
				this.hp = HP;
				this.dmg = DMG;
				
			}
		}
		
		public static void spawn() {
			
			int ss = 0 + (int)(Math.random() * ((4 - 0) + 1));
			if(ss==1){
			int rn = 0 + (int)(Math.random() * ((monsterlist.size() - 0) + 1));
			Monster m = new Monster("rat", 20, 2, 0);
			Monster o = new Monster ("Snake", 15, 3, 0);
			}
			
		}
		
		public static void combat () {
		// Use Rock, paper, scissors method.
		}
		
		public static void pDeath () {
			if (Vitality == 0) {
				System.out.println("You died.");
				delay(5000);
				System.exit(3);
			}
		}
		
		public static void mDeath (Monster m) {
			if (m.hp == 0) {
				monsterlist.remove(m);
				gold +=10;
			}
		}
		
		
		
		
}

